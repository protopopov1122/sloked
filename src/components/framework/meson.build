sloked_src = [
  'src/core/Base64.cpp',
  'src/core/CharPreset.cpp',
  'src/core/CLI.cpp',
  'src/core/Closeable.cpp',
  'src/core/DynamicBitset.cpp',
  'src/core/Encoding.cpp',
  'src/core/Error.cpp',
  'src/core/Failure.cpp',
  'src/core/Library.cpp',
  'src/core/Locale.cpp',
  'src/core/Logger.cpp',
  'src/core/NewLine.cpp',
  'src/core/Position.cpp',
  'src/core/Scope.cpp',
  'src/core/Semaphore.cpp',
  'src/core/String.cpp',
  'src/core/URI.cpp',
  'src/core/encoding/Utf8.cpp',
  'src/core/encoding/Utf32LE.cpp',
  'src/core/awaitable/Poll.cpp',
  'src/editor/Configuration.cpp',
  'src/editor/EditorInstance.cpp',
  'src/editor/EditorServer.cpp',
  'src/editor/Manager.cpp',
  'src/editor/ScreenServer.cpp',
  'src/editor/doc-mgr/Document.cpp',
  'src/editor/doc-mgr/DocumentSet.cpp',
  'src/editor/doc-mgr/DocumentUpstream.cpp',
  'src/editor/terminal/ScreenProvider.cpp',
  'src/facade/Crypto.cpp',
  'src/facade/Server.cpp',
  'src/facade/Services.cpp',
  'src/facade/Network.cpp',
  'src/filesystem/FileIO.cpp',
  'src/json/AST.cpp',
  'src/json/Lexer.cpp',
  'src/json/Parser.cpp',
  'src/kgr/Path.cpp',
  'src/kgr/Pipe.cpp',
  'src/kgr/RestrictedServer.cpp',
  'src/kgr/Serialize.cpp',
  'src/kgr/Value.cpp',
  'src/kgr/local/Context.cpp',
  'src/kgr/local/NamedServer.cpp',
  'src/kgr/local/Pipe.cpp',
  'src/kgr/local/Server.cpp',
  'src/kgr/net/Interface.cpp',
  'src/kgr/net/MasterServer.cpp',
  'src/kgr/net/Response.cpp',
  'src/kgr/net/SlaveServer.cpp',
  'src/namespace/Directory.cpp',
  'src/namespace/Empty.cpp',
  'src/namespace/Filesystem.cpp',
  'src/namespace/Find.cpp',
  'src/namespace/Mount.cpp',
  'src/namespace/Object.cpp',
  'src/namespace/Path.cpp',
  'src/namespace/Resolve.cpp',
  'src/namespace/View.cpp',
  'src/namespace/Virtual.cpp',
  'src/net/BufferedSocket.cpp',
  'src/net/CompressedSocket.cpp',
  'src/net/CryptoSocket.cpp',
  'src/net/Socket.cpp',
  'src/sched/DefaultScheduler.cpp',
  'src/sched/EventLoop.cpp',
  'src/sched/Executor.cpp',
  'src/sched/Lifetime.cpp',
  'src/sched/MultithreadExecutor.cpp',
  'src/sched/Scheduler.cpp',
  'src/sched/ScopedExecutor.cpp',
  'src/sched/ScopedScheduler.cpp',
  'src/sched/SequentialExecutor.cpp',
  'src/screen/Component.cpp',
  'src/screen/ComponentTree.cpp',
  'src/screen/Manager.cpp',
  'src/screen/Point.cpp',
  'src/screen/Splitter.cpp',
  'src/screen/graphics/Terminal.cpp',
  'src/screen/terminal/multiplexer/TerminalWindow.cpp',
  'src/screen/terminal/multiplexer/TerminalBuffer.cpp',
  'src/screen/terminal/multiplexer/TerminalSplitter.cpp',
  'src/screen/terminal/multiplexer/TerminalTabber.cpp',
  'src/screen/terminal/components/ComponentHandle.cpp',
  'src/screen/terminal/components/MultiplexerComponent.cpp',
  'src/screen/terminal/components/SplitterComponent.cpp',
  'src/screen/terminal/components/TabberComponent.cpp',
  'src/screen/terminal/components/TextPane.cpp',
  'src/screen/terminal/components/TextPaneComponent.cpp',
  'src/screen/widgets/TextEditor.cpp',
  'src/security/Authenticator.cpp',
  'src/security/Master.cpp',
  'src/security/Restriction.cpp',
  'src/security/Slave.cpp',
  'src/services/ScreenInput.cpp',
  'src/services/ScreenSize.cpp',
  'src/services/CharPreset.cpp',
  'src/services/CredentialMaster.cpp',
  'src/services/Cursor.cpp',
  'src/services/DocumentNotify.cpp',
  'src/services/DocumentSet.cpp',
  'src/services/Namespace.cpp',
  'src/services/Screen.cpp',
  'src/services/Search.cpp',
  'src/services/Service.cpp',
  'src/services/TextPane.cpp',
  'src/services/TextRender.cpp',
  'src/text/TextBlock.cpp',
  'src/text/TextBlockHandle.cpp',
  'src/text/TextChunk.cpp',
  'src/text/TextDocument.cpp',
  'src/text/TextRegion.cpp',
  'src/text/TextView.cpp',
  'src/text/cursor/Cursor.cpp',
  'src/text/cursor/EditingPrimitives.cpp',
  'src/text/cursor/Transaction.cpp',
  'src/text/cursor/TransactionBatch.cpp',
  'src/text/cursor/TransactionCursor.cpp',
  'src/text/cursor/TransactionFactory.cpp',
  'src/text/cursor/TransactionStreamMultiplexer.cpp',
  'src/text/search/Match.cpp',
  'src/text/search/Replace.cpp',
]

cpp = meson.get_compiler('cpp')

atomic = cpp.find_library('atomic', required : false)
execinfo = cpp.find_library('execinfo', required : false)
threads = dependency('threads')
sloked_framework_lib = shared_library('sloked', sloked_src,
  include_directories : include_directories('headers'),
  dependencies : [threads, atomic, execinfo])
sloked_framework = declare_dependency(link_with : sloked_framework_lib,
  include_directories : include_directories('headers'))

subdir('tests')
